apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "litellm-db-chart.fullname" . }}
  labels:
    {{- include "litellm-db-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "litellm-db-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "litellm-db-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "litellm-db-chart.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
      - name: fix-permissions
        image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
        imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
        command:
        {{- toYaml .Values.initContainer.command | nindent 8 }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        securityContext:
          {{- toYaml .Values.initContainer.securityContext | nindent 10 }}
      {{- end }}
      containers:
      - name: postgres
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.service.targetPort }}
          protocol: {{ .Values.service.protocol }}
        env:
        - name: POSTGRES_DB
          value: {{ .Values.global.litellm.db.name | quote }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "litellm-db-chart.secretName" . }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "litellm-db-chart.secretName" . }}
              key: password
        {{- if .Values.postgresql.maxConnections }}
        - name: POSTGRES_MAX_CONNECTIONS
          value: {{ .Values.postgresql.maxConnections | quote }}
        {{- end }}
        {{- if .Values.postgresql.sharedBuffers }}
        - name: POSTGRES_SHARED_BUFFERS
          value: {{ .Values.postgresql.sharedBuffers | quote }}
        {{- end }}
        {{- with .Values.extraEnvVars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
        {{- end }}
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.probes.enabled }}
        readinessProbe:
          exec:
            command:
            - pg_isready
            - "-d"
            - {{ .Values.global.litellm.db.name | quote }}
            - "-U"
            - "$(POSTGRES_USER)"
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          successThreshold: {{ .Values.probes.readiness.successThreshold }}
          failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - "-d"
            - {{ .Values.global.litellm.db.name | quote }}
            - "-U"
            - "$(POSTGRES_USER)"
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          successThreshold: {{ .Values.probes.liveness.successThreshold }}
          failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: postgres-storage
        {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ include "litellm-db-chart.pvcName" . }}
        {{- end }}
      {{- end }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
