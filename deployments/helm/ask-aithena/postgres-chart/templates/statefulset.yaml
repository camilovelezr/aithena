apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres-chart.fullname" . }}
  labels:
    {{- include "postgres-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ .Values.headless.name }}
  selector:
    matchLabels:
      {{- include "postgres-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres-chart.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: fix-permissions
        image: busybox:1.35
        command:
        - /bin/sh
        - -c
        - |
          chown -R 999:999 /var/lib/postgresql/data
          chmod 700 /var/lib/postgresql/data
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        securityContext:
          runAsUser: 0
      containers:
      - name: postgres
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: postgres
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database | quote }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "postgres-chart.fullname" . }}
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgres-chart.fullname" . }}
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql-common/postgresql.conf
          subPath: postgresql.conf
        {{- if .Values.postgresql.initdb.enabled }}
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        {{- end }}
        - name: shared-memory
          mountPath: /dev/shm
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -d {{ .Values.postgresql.database }} -U $POSTGRES_USER
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -d {{ .Values.postgresql.database }} -U $POSTGRES_USER
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -d {{ .Values.postgresql.database }} -U $POSTGRES_USER
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          runAsUser: 999
          runAsGroup: 999
      securityContext:
        fsGroup: 999
      volumes:
      - name: postgres-config
        configMap:
          name: {{ include "postgres-chart.fullname" . }}-config
      {{- if .Values.postgresql.initdb.enabled }}
      - name: init-scripts
        configMap:
          name: {{ include "postgres-chart.fullname" . }}-initdb
          defaultMode: 0755
      {{- end }}
      - name: shared-memory
        emptyDir:
          medium: Memory
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClassName }}
      storageClassName: {{ .Values.persistence.storageClassName | quote }}
    {{- end }}
  {{- end }}
