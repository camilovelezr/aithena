services:
  ollama:
    image: ollama/ollama
    volumes:
      - type: bind
        source: /Users/camilovelezr/.ollama # modify this to your ollama data directory
        target: /root/.ollama

    ports:
      - "11434:11434"
    env_file:
      - docker.env

  pgvector:
    image: pgvector/pgvector:pg17
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: password # modify this to your password
    volumes:
      - type: bind
        source: ./pgdata # modify this to your pgvector data directory
        target: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - docker.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d aithena -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
  aithena-services:
    build:
      context: ../../  # Set to the repository root, don't modify
      dockerfile: services/aithena-services/Dockerfile
    env_file:
      - docker.env
    environment:
    - "POSTGRES_HOST=pgvector"
    - "POSTGRES_PORT=5432"
    - "POSTGRES_DB=aithena"
    - "POSTGRES_USER=postgres" # you can modify this to your username
    ports:
      - "8000:80"

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    volumes:
      - type: bind
        source: ./config.yaml
        target: /app/config.yaml
    command:
     - "--config=/app/config.yaml"
    ports:
      - "4000:4000"
    environment:
        DATABASE_URL: "postgresql://llmproxy:litellmpassword@litellm_db:5432/litellm" # modify this to your database url
        STORE_MODEL_IN_DB: "True" # allows adding models to proxy via UI
        OLLAMA_HOST: "http://ollama:11434"
        AITHENA_SERVICES_URL: "http://aithena-services:8000"
    env_file:
      - docker.env
    depends_on:
      litellm_db:
        condition: service_healthy
      ollama:
        condition: service_started

  litellm_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: llmproxy # modify this to your username
      POSTGRES_PASSWORD: litellmpassword # modify this to your password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10
