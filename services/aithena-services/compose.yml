services:
  ollama:
    image: ollama/ollama
    volumes:
      - type: bind
        source: ${OLLAMA_DATA_PATH:-./ollama}
        target: /root/.ollama
    ports:
      - "11434:11434"
    env_file:
      - .env

  pgvector:
    image: pgvector/pgvector:pg16
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${PGVECTOR_PASSWORD:-password}
    volumes:
      - type: bind
        source: ${PGVECTOR_DATA_PATH:-./pgdata}
        target: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${PGVECTOR_DB:-postgres} -U ${PGVECTOR_USER:-postgres}"]
      interval: 1s
      timeout: 5s
      retries: 10
  aithena-services:
    build:
      context: ../../  # Set to the repository root, don't modify
      dockerfile: services/aithena-services/Dockerfile
    env_file:
      - .env
    environment:
    - "POSTGRES_HOST=pgvector"
    - "POSTGRES_PORT=5432"
    - "POSTGRES_DB=${PGVECTOR_DB:-postgres}"
    - "POSTGRES_USER=${PGVECTOR_USER:-postgres}"
    - "POSTGRES_PASSWORD=${PGVECTOR_PASSWORD:-postgres}"
    ports:
      - "8000:80"

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    volumes:
      - type: bind
        source: ./config.yaml
        target: /app/config.yaml
    command:
     - "--config=/app/config.yaml"
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgresql://${LITELLM_DB_USER:-llmproxy}:${LITELLM_DB_PASSWORD:-litellmpassword}@litellm_db:5432/litellm
      STORE_MODEL_IN_DB: "True"
      OLLAMA_HOST: http://host.docker.internal:11434
      # LITELLM_LOG: DEBUG
    env_file:
      - .env
    depends_on:
      litellm_db:
        condition: service_healthy

  litellm_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: ${LITELLM_DB_USER:-llmproxy}
      POSTGRES_PASSWORD: ${LITELLM_DB_PASSWORD:-litellmpassword}
    volumes:
      - ${LITELLM_DB_DATA_PATH:-./litellm_db_data}:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U ${LITELLM_DB_USER:-llmproxy}"]
      interval: 1s
      timeout: 5s
      retries: 10
